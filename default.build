<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="3.5" DefaultTargets="default">
  <PropertyGroup>
    <BuildDir>_build</BuildDir>
    <OutputPath>$(MSBuildProjectDirectory)\_build</OutputPath>
    <ExamplesDirectory>$(MSBuildProjectDirectory)\Examples</ExamplesDirectory>
    <PackageDirectory>$(OutputPath)\Package</PackageDirectory>
  </PropertyGroup>

  <Target Name="default">
    <CallTarget Targets="CleanOutput" />
    <CallTarget Targets="BuildCore" />
    <CallTarget Targets="Tests" />
    <CallTarget Targets="RunExamples" />
  </Target>

  <Target Name="Package" DependsOnTargets="CleanOutput;BuildCore">
    <CreateItem Include="$(OutputPath)\Core\*.dll">
      <Output TaskParameter="Include" ItemName="DllFiles" />
    </CreateItem>
    <MakeDir Directories="$(PackageDirectory)"/>
    <Copy SourceFiles="$(OutputPath)\Core\StorEvil.exe" DestinationFolder="$(PackageDirectory)" />
    <Copy SourceFiles="@(DllFiles)" DestinationFolder="$(PackageDirectory)" />
    <Copy SourceFiles="$(MSBuildProjectDirectory)\InstallationInstructions.txt" DestinationFolder="$(PackageDirectory)" />
    <Copy SourceFiles="$(MSBuildProjectDirectory)\License.txt" DestinationFolder="$(PackageDirectory)" />
    <Copy SourceFiles="$(MSBuildProjectDirectory)\ReleaseNotes.txt" DestinationFolder="$(PackageDirectory)" />
  </Target>
 
  <Target Name="BuildCore">
    <MSBuild
  Projects="Core\StorEvil\StorEvil.Core.csproj;Core\StorEvil.Assertions\StorEvil.Assertions.csproj;Core\StorEvil.Console\StorEvil.csproj"
  Properties="OutputPath=$(OutputPath)\Core"
        />
  </Target>

  <Target Name="Tests">
    <MSBuild
  Projects="Tests\StorEvil.Tests\StorEvil.Tests.csproj"
  Properties="OutputPath=$(OutputPath)\Tests"
        />

    <Exec Command="$(MSBuildProjectDirectory)\Tools\NUnit\nunit-console.exe $(MSBuildProjectDirectory)\_build\Tests\StorEvil.Tests.dll"	/>
  </Target>
  
  <Target Name="CleanOutput">
    <RemoveDir Directories="$(OutputPath)" Condition="Exists($(OutputPath))"/>

    <MakeDir Directories="$(OutputPath)" />

  </Target>

  <Target Name="RunExamples">
    <MSBuild
          Projects="$(MSBuildProjectFile)"
          Targets="RunExample"
          Properties="ExampleProjectDirectory=$(ExamplesDirectory)\Tutorial;ExampleProject=Tutorial.csproj"
        />

    <MSBuild
        Projects="$(MSBuildProjectFile)"
        Targets="RunExample"
        Properties="ExampleProjectDirectory=$(ExamplesDirectory)\TicTacToe;ExampleProject=TicTacToe.csproj"
        />

    <MSBuild
        Projects="$(MSBuildProjectFile)"
        Targets="RunExample"
        Properties="ExampleProjectDirectory=$(ExamplesDirectory)\Bowling;ExampleProject=Bowling.csproj"
        />

    <MSBuild
        Projects="$(MSBuildProjectFile)"
        Targets="RunExample"
        Properties="ExampleProjectDirectory=$(ExamplesDirectory)\ConwaysLife;ExampleProject=ConwaysLife.csproj"
        />

    <MSBuild
        Projects="$(MSBuildProjectFile)"
        Targets="RunExample"
        Properties="ExampleProjectDirectory=$(ExamplesDirectory)\Pizza;ExampleProject=Pizza.csproj;ExpectedFailures=1"
        />
  </Target>

  <!-- runs an example project in both In-place and NUnit modes-->
  <Target Name="RunExample">
    <PropertyGroup>
      <ExpectedFailures Condition=" '$(ExpectedFailures)'=='' ">0</ExpectedFailures>
    </PropertyGroup>
    <Message Text="RunExample $(ExampleProjectDirectory)/$(ExampleProject)"/>
    <MSBuild
			Projects="$(ExampleProjectDirectory)\$(ExampleProject)"
			Properties="OutputPath=$(OutputPath)\Examples"
        >
      <Output
                TaskParameter="TargetOutputs"
                ItemName="ExampleAssembly" />
    </MSBuild>

    <Message Text="Executing in-place: $(ExampleProjectDirectory)/$(ExampleProject)"/>
    <Exec
     WorkingDirectory="$(ExampleProjectDirectory)"
     Command="$(MSBuildProjectDirectory)\_build\Core\StorEvil.exe execute -a @(ExampleAssembly) $(OutputPath)\Core\StorEvil.Assertions.dll"
     IgnoreExitCode ="true"
     >
      <Output
        TaskParameter="ExitCode"
        ItemName="InPlaceExitCode" />
    </Exec>

    <Message Text="Executing in NUnit: $(ExampleProjectDirectory)/$(ExampleProject)"/>

    <Exec
     WorkingDirectory="$(ExampleProjectDirectory)"
     Command="$(MSBuildProjectDirectory)\_build\Core\StorEvil.exe nunit --destination $(OutputPath)\Examples\Temp.cs -a @(ExampleAssembly) $(OutputPath)\Core\StorEvil.Assertions.dll"/>

    <CSC
			Sources="$(MSBuildProjectDirectory)\_build\Examples\Temp.cs"
			OutputAssembly="$(MSBuildProjectDirectory)\_build\Examples\Temp.dll"
			EmitDebugInformation="true"
			References="@(ExampleAssembly);$(MSBuildProjectDirectory)\Lib\Test\nunit.framework.dll;$(MSBuildProjectDirectory)\_build\Core\StorEvil.Core.dll;$(MSBuildProjectDirectory)\_build\Core\StorEvil.Assertions.dll"
			TargetType="library"
			/>
    
    <Exec Command="$(MSBuildProjectDirectory)\Tools\NUnit\nunit-console.exe $(MSBuildProjectDirectory)\_build\Examples\Temp.dll /xml=$(MSBuildProjectDirectory)\_build\TestResults_$(ExampleProject).xml" IgnoreExitCode ="true">
      <Output
          TaskParameter="ExitCode"
          ItemName="NUnitExitCode" />
    </Exec>

    <Error
            Text="NUnit failures: Expected $(ExpectedFailures) but got @(NUnitExitCode)"
            Condition="$(ExpectedFailures) != @(NUnitExitCode)" />
    <Error
           Text="In place failures: Expected $(ExpectedFailures) but got @(InPlaceExitCode)"
           Condition="$(ExpectedFailures) != @(NUnitExitCode)" />
  </Target>
  
 

</Project>